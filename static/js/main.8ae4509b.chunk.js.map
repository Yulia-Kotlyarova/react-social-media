{"version":3,"sources":["style/Profile.module.css","img/astronaut.svg","style/Aside.module.css","img/angry-monster.svg","img/eye-open.svg","img/jellyfish.svg","img/unity-hand.svg","img/cat-face.svg","img/logo.svg","img/alien.svg","serviceWorker.js","components/data/state.js","Header.jsx","Footer.jsx","Friends.jsx","Aside.jsx","components/Profile/Post.jsx","components/Profile/MyPosts.jsx","components/Profile/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Dialogs/Messages.jsx","components/Dialogs/Dialog.jsx","News.jsx","Music.jsx","Settings.jsx","Main.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","store","_state","linkData","id","link","linkName","dialogsPage","messagesData","message","dialogsData","name","ava","monster","eye","jelly","unity","cat","newMessageText","profilePage","postData","likeCount","newPostText","getState","this","_callSubscriber","console","log","subscribe","observer","dispatch","action","type","post","push","text","Header","className","src","logo","alt","Footer","href","DialogItem","props","Friends","friendItems","map","el","AsideLink","to","A","nav_link","activeClassName","activeLink","Aside","asideLinks","Post","m","likes","MyPosts","PostItem","alien","newPost","React","createRef","ref","value","onChange","newText","current","onPostChangeActCreator","autoFocus","onClick","ProfileInfo","class","astronaut","description","Profile","Message","Messages","newMessage","messagesItem","onMessageChangeActCreator","rows","path","Dialog","dialogsItems","News","Music","Settings","Main","render","component","renderTree","state","ReactDOM","StrictMode","bind","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.8ae4509b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"Profile_ava__2e7y_\",\"description\":\"Profile_description__dbuwa\"};","module.exports = __webpack_public_path__ + \"static/media/astronaut.4c14b0af.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_link\":\"Aside_nav_link__3CQZL\",\"activeLink\":\"Aside_activeLink__1jnXi\"};","module.exports = __webpack_public_path__ + \"static/media/angry-monster.eeb2faff.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye-open.4c00f870.svg\";","module.exports = __webpack_public_path__ + \"static/media/jellyfish.fbc660d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/unity-hand.22bc2664.svg\";","module.exports = __webpack_public_path__ + \"static/media/cat-face.dff78f24.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ef572895.svg\";","module.exports = __webpack_public_path__ + \"static/media/alien.f906da7a.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import monster from '../../img/angry-monster.svg';\r\nimport eye from '../../img/eye-open.svg';\r\nimport jelly from '../../img/jellyfish.svg';\r\nimport unity from '../../img/unity-hand.svg';\r\nimport cat from '../../img/cat-face.svg';\r\n\r\nconst ADD_POST = 'ADD POST';\r\nconst UPDATE_NEW_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE = 'UPDATE-NEW-MESSAGE';\r\n\r\nlet store = {\r\n  _state: {\r\n\r\n    linkData: [\r\n      { id: 1, link: \"/profile\", linkName: \"profile\"},\r\n      { id: 2, link: \"/dialog\", linkName: \"dialog\"},\r\n      { id: 3, link: \"/news\", linkName: \"news\"},\r\n      { id: 4, link: \"/music\", linkName: \"music\"},\r\n      { id: 5, link: \"/settings\", linkName: \"settings\"},\r\n      // { id: 6, link: \"/friends\", linkName: \"friends\"},\r\n    ],\r\n\r\n      dialogsPage: {\r\n        messagesData: [\r\n          {id: '1', message: 'Hi!'},\r\n          {id: '2', message: 'Pipetka! '},\r\n          {id: '3', message: 'Pipetka loves you!'},\r\n        ],\r\n\r\n        dialogsData: [\r\n          {id: '1', name: 'Pipetka', ava: `${monster}`},\r\n          {id: '2', name: 'Kykyshka ', ava: `${eye}`},\r\n          {id: '3', name: 'Senya', ava: `${jelly}`},\r\n          {id: '4', name: 'Fatty Cat', ava: `${unity}`},\r\n          {id: '5', name: 'Murrr', ava: `${cat}`},\r\n        ],\r\n\r\n        newMessageText: 'how low?'\r\n\r\n      },\r\n\r\n      profilePage: {\r\n        postData: [\r\n          {id: '1', message: 'Hi! I am pipetka!', likeCount: '12' },\r\n          {id: '2', message: \"It's my first post.\", likeCount: '13' },\r\n          {id: '3', message: 'Pipetka loves you!', likeCount: '69' },\r\n        ],\r\n\r\n        newPostText:  'kookooshka'\r\n      }\r\n  },\r\n\r\n  getState() {\r\n\r\n    return this._state;\r\n  },\r\n\r\n  _callSubscriber() {\r\n    debugger\r\n    console.log(true);\r\n  },\r\n  \r\n  subscribe(observer) {\r\n    debugger\r\n    this._callSubscriber = observer;\r\n  },\r\n\r\n  // addPost() {\r\n\r\n  //   let post = {\r\n  //     id: '4', \r\n  //     message: this._state.profilePage.newPostText,\r\n  //     likeCount: '0'\r\n  //   };\r\n  \r\n  //   this._state.profilePage.postData.push(post);\r\n  //   this._state.profilePage.newPostText = '';\r\n  //   this._callSubscriber(this._state);\r\n  // },\r\n\r\n  // updateNewPost (text) {\r\n  //   debugger\r\n  //   this._state.profilePage.newPostText = text;\r\n  //   this._callSubscriber(this._state);\r\n  // },\r\n\r\n  // addMessage() {\r\n  //   let message = {\r\n  //     id: '4',\r\n  //     message: this._state.dialogsPage.newMessageText,\r\n  //   };\r\n  \r\n  //   this._state.dialogsPage.messagesData.push(message);\r\n  //   this._state.dialogsPage.newMessageText = '';\r\n  //   this._callSubscriber(this._state);\r\n  // },\r\n\r\n  // updateNewMessage(text) {\r\n  //   this._state.dialogsPage.newMessageText = text;\r\n  //   this._callSubscriber(this._state);\r\n  // },\r\n\r\n  dispatch(action) {\r\n\r\n    if (action.type === 'ADD POST') {\r\n      let post = {\r\n        id: '4', \r\n        message: this._state.profilePage.newPostText,\r\n        likeCount: '0'\r\n      };\r\n    \r\n      this._state.profilePage.postData.push(post);\r\n      this._state.profilePage.newPostText = '';\r\n      this._callSubscriber(this._state);\r\n\r\n    } else if (action.type === \"UPDATE-NEW-POST-TEXT\") {\r\n      this._state.profilePage.newPostText = action.text;\r\n      this._callSubscriber(this._state);\r\n\r\n    } else if ( action.type === 'ADD-MESSAGE') {\r\n      let message = {\r\n        id: '4',\r\n        message: this._state.dialogsPage.newMessageText,\r\n      };\r\n    \r\n      this._state.dialogsPage.messagesData.push(message);\r\n      this._state.dialogsPage.newMessageText = '';\r\n      this._callSubscriber(this._state);\r\n\r\n    } else if (action.type === 'UPDATE-NEW-MESSAGE') {\r\n      this._state.dialogsPage.newMessageText = action.text;\r\n      this._callSubscriber(this._state);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport const addPostActCreator = () => ({type: ADD_POST });\r\nexport const onPostChangeActCreator = (newText) => ({ type: UPDATE_NEW_TEXT, text: newText });\r\n\r\nexport const sendMessageActCreator = () => ({type: ADD_MESSAGE });\r\nexport const onMessageChangeActCreator = (text) => ({ type: UPDATE_NEW_MESSAGE, text: text });\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\nimport logo from './img/logo.svg';\nimport './style/App.css';\n\nfunction Header() {\n  return (\n    <div className=\"Header\">\n      <header className=\"\">\n        <div className=\"container\">\n          {/* <div className=\"row\">\n            <ul className=\"col-12 nav justify-content-center\">\n              <li className = \"nav-item\"> \n                <a href = \"#\" className = \"nav-link active\"> title</a>\n              </li>\n              <li className = \"nav-item\"> \n                <a href = \"#\" className = \"nav-link\"> title</a>\n              </li>\n              <li className = \"nav-item\"> \n                <a href = \"#\" className = \"nav-link\"> title</a>\n              </li>\n              <li className = \"nav-item\"> \n                <a href = \"#\" className = \"nav-link\"> title</a>\n              </li>\n            </ul>\n          </div> */}\n        </div>\n          <img src={logo} className=\"Header-logo\" alt=\"logo\" />\n      </header>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\r\nimport './style/App.css';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n        <a href=\"https://stories.freepik.com/car\">Illustration by Stories by Freepik</a>\r\n        <a href=\"https://www.freepik.com/vectors/business\">Business vector created by macrovector - www.freepik.com</a>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './style/App.css';\r\n\r\nconst DialogItem = (props) => {\r\n  return <a className = \" col-4 friend-ava\"> \r\n            <img src= {props.ava} alt=\"props.name\" className = \"ava-friend\"/>\r\n        </a>\r\n}\r\n\r\nfunction Friends(props) {\r\n\r\n  const friendItems = props.dialogsData.map(el => <DialogItem ava = {el.ava} name = {el.name} id = {el.id}/>);\r\n\r\n  return (\r\n    <div className=\"row justify-content-around friends-box\">\r\n       { friendItems }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Friends;\r\n","import React from 'react';\r\nimport './style/App.css';\r\nimport A from './style/Aside.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Friends from './Friends';\r\n\r\n\r\n\r\nconst AsideLink = (props) => {\r\n  return <li className = \"nav-item\"> \r\n             <NavLink to = {props.link} className = {A.nav_link} activeClassName = {A.activeLink}> {props.linkName} </NavLink>\r\n          </li>\r\n}\r\n\r\nfunction Aside(props) {\r\n\r\n  let asideLinks = props.linkData.map(el => <AsideLink link = {el.link} linkName = {el.linkName} id = {el.id}/>);\r\n\r\n  return (\r\n    <aside className=\"col-2\" >\r\n        <ul className=\"nav flex-column\">\r\n          { asideLinks }\r\n\r\n          <Friends dialogsData = { props.dialogsData }/>\r\n              {/* <li className = \"nav-item\"> \r\n                <NavLink to = \"/profile\" className = {A.nav_link} activeClassName = {A.activeLink}> profile </NavLink>\r\n              </li>\r\n              <li className = \"nav-item\"> \r\n                <NavLink to = \"/dialog\" className = {`${A.nav_link}`} activeClassName = {A.activeLink}> messages </NavLink>\r\n              </li>\r\n              <li className = \"nav-item\"> \r\n                <NavLink to = \"/news\" className = {A.nav_link} activeClassName = {A.activeLink}> news </NavLink>\r\n              </li>\r\n              <li className = \"nav-item\"> \r\n                <NavLink to = \"/music\" className = {A.nav_link} activeClassName = {A.activeLink}> music </NavLink>\r\n              </li>\r\n              <li className = \"nav-item\"> \r\n                <NavLink to = \"/settings\" className = {A.nav_link} activeClassName = {A.activeLink}> settings </NavLink>\r\n              </li> */}\r\n        </ul>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default Aside;\r\n","import React from 'react';\r\nimport '../../style/App.css';\r\nimport '../../style/Post.css';\r\nimport m from'../../style/Profile.module.css';\r\nimport astronaut from '../../img/astronaut.svg';\r\n\r\nfunction Post(props) {\r\n  return (\r\n    <div className = \"d-flex post-box\">\r\n       <img src= {props.ava} className={m.ava} alt=\"ava\" />\r\n       <div className = \"post-box-p\" >\r\n            <p> {props.message}</p> \r\n            <span> like: {props.likes} </span>  \r\n        </div> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from'./Post.jsx';\r\nimport alien from '../../img/alien.svg';\r\n\r\nimport '../../style/App.css';\r\nimport { addPostActCreator, onPostChangeActCreator } from '../data/state';\r\n\r\nfunction MyPosts(props) {\r\n\r\n  const PostItem = props.postData.map(el => <Post message = {el.message} ava = {alien} likes = {el.likeCount}/> );\r\n\r\n  const newPost = React.createRef();\r\n\r\n  const addPost = () => {\r\n    // let text = newPost.current.value;\r\n    props.dispatch(addPostActCreator());\r\n    // props.updateNewPost('');\r\n  }\r\n\r\n  const onPostChange = () => {\r\n    let newText = newPost.current.value;\r\n    props.dispatch(onPostChangeActCreator(newText));\r\n    // props.dispatch(action);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <div>\r\n                <textarea ref = { newPost } value = { props.newPostText } onChange = { onPostChange } autoFocus={true}/>\r\n                <button className = \"send-btn\" onClick = { addPost } > send </button>\r\n\r\n        </div> \r\n        { PostItem }\r\n    {/* <Post message = {postData[0].message} ava = {alien} likes = {postData[0].likeCount} />\r\n    <Post message = {postData[1].message} ava = {astronaut} likes = {postData[1].likeCount}/>\r\n    <Post message = {postData[2].message} ava = {astronaut} likes = {postData[2].likeCount}/> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport '../../style/App.css';\r\nimport m from'../../style/Profile.module.css';\r\nimport astronaut from '../../img/astronaut.svg';\r\n\r\nfunction ProfileInfo() {\r\n  return (\r\n      <div class=\"person-box\">\r\n        <div class=\"ava d-flex\">\r\n          <img src= {astronaut} className={m.ava} alt=\"ava\" />\r\n          <p class={m.description}>Lorem ipsum dolor sit amet, consectetur adipisicing elit. \r\n          Porro ratione soluta magnam eum reprehenderit, natus cumque ab necessitatibus tempora \r\n          dolorum fugiat rem, ut architecto! \r\n          Vitae possimus nesciunt ex voluptas. Quos!</p>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport '../../style/App.css';\r\nimport MyPosts from'./MyPosts.jsx';\r\nimport ProfileInfo from './ProfileInfo.jsx';\r\n\r\nfunction Profile(props) {\r\n  return (\r\n    <section className=\"col-8\">\r\n      <ProfileInfo/>\r\n      <MyPosts postData = { props.postData }  newPostText ={ props.newPostText } dispatch = { props.dispatch} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport '../../style/App.css';\r\n\r\nimport { sendMessageActCreator, onMessageChangeActCreator} from '../data/state';\r\n\r\nconst Message = (props) => {\r\n  return  <li className = \"nav-item massage-item\"> {props.message} </li>\r\n  }\r\n\r\nfunction Messages(props) {\r\n\r\n  const newMessage = React.createRef();\r\n\r\n  const sendMessage = () => {\r\n    // let text = newMessage.current.value;\r\n    // props.addMessage();\r\n    props.dispatch(sendMessageActCreator());\r\n  }\r\n\r\n  const onMessageChange = () => {\r\n    let text = newMessage.current.value;\r\n    // props.updateNewMessage(text);\r\n    props.dispatch(onMessageChangeActCreator(text))\r\n  }\r\n\r\n  let messagesItem = props.messagesData.map(el => <Message message = {el.message}/>); \r\n\r\n  return (\r\n    <div className = \"col-6 d-flex flex-column justify-content-between messages\">\r\n      <textarea ref = {newMessage} value = { props.newMessageText }  onChange = { onMessageChange } rows = \"5\" className = \"send-message\" autoFocus = {true}> </textarea>\r\n      <button className = \"send-btn\" onClick = { sendMessage } > send</button>\r\n      <ul className=\"nav flex-column\">\r\n        { messagesItem }\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Messages;\r\n","import React from 'react';\r\nimport '../../style/App.css';\r\nimport '../../style/Dialog.css';\r\nimport  Messages from './Messages.jsx';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialog/\" + props.id;\r\n\r\n  return <li className = \"nav-item d-flex dialog-item align-items-center\"> \r\n            <img src= {props.ava} alt=\"\" className = \"ava-friend\"/>\r\n            <NavLink to={path} activeClassName = \"active\"> {props.name} </NavLink>\r\n        </li>\r\n}\r\n\r\nfunction Dialog(props) {\r\n\r\n  let dialogsItems = props.dialogsData.map(el => <DialogItem ava = {el.ava} name = {el.name} id = {el.id}/>);\r\n\r\n  return (\r\n    <section className=\"col-8\">\r\n      <div className = \"row\">\r\n        <div className = \"col-6 dialogs\">\r\n          <ul className=\"nav flex-column\">\r\n            { dialogsItems }\r\n                  {/* <DialogItem name = {dialogsData[0].name} id = {dialogsData[0].id}/>\r\n                  <DialogItem name = ' Kykyshka ' id = \"2\"/>\r\n                  <DialogItem name = ' Senya' id = \"3\"/>\r\n                  <DialogItem name = ' Fatty Cat' id = \"4\"/>\r\n                  <DialogItem name = ' Murrr' id = \"5\"/> */}\r\n            </ul>\r\n        </div>\r\n            <Messages messagesData = { props.messagesData } newMessageText = { props.newMessageText } dispatch = { props.dispatch } />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Dialog;\r\n","import React from 'react';\r\nimport './style/App.css';\r\nimport m from'./style/Profile.module.css';\r\nimport Aside from'./Aside.jsx';\r\nimport Post from './components/Profile/Post.jsx';\r\nimport MyPosts from'./components/Profile/MyPosts.jsx';\r\nimport astronaut from './img/astronaut.svg';\r\n\r\nfunction News() {\r\n  return (\r\n    <section className=\"col-8\">\r\n      News\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport './style/App.css';\r\nimport m from'./style/Profile.module.css';\r\nimport Aside from'./Aside.jsx';\r\nimport Post from'./components/Profile/Post.jsx';\r\nimport MyPosts from'./components/Profile/MyPosts.jsx';\r\nimport astronaut from './img/astronaut.svg';\r\n\r\nfunction Music() {\r\n  return (\r\n    <section className=\"col-8\">\r\n      Music\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport './style/App.css';\r\nimport m from'./style/Profile.module.css';\r\nimport Aside from'./Aside.jsx';\r\nimport Post from'./components/Profile/Post.jsx';\r\nimport MyPosts from'./components/Profile/MyPosts.jsx';\r\nimport astronaut from './img/astronaut.svg';\r\n\r\nfunction Settings() {\r\n  return (\r\n    <section className=\"col-8\">\r\n        Settings\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport './style/App.css';\r\n\r\nimport Aside from'./Aside.jsx';\r\nimport Profile from './components/Profile/Profile.jsx';\r\nimport Dialog from './components/Dialogs/Dialog.jsx';\r\nimport News from './News.jsx';\r\nimport Music from './Music.jsx';\r\nimport Settings from './Settings.jsx';\r\nimport Friends from './Friends.jsx';\r\nimport { Route, BrowserRouter } from 'react-router-dom';\r\n\r\nfunction Main(props) {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n            <Aside linkData = { props.linkData } dialogsData = {props.dialogsData} />\r\n            {/* <Route exact path =\"/dialog\" component = {Dialog}/>\r\n            <Route path=\"/profile\" component = {Profile}/> */}\r\n            <Route path =\"/dialog\" render = { () => <Dialog messagesData = { props.messagesData } dialogsData = {props.dialogsData}  newMessageText = { props.newMessageText } dispatch = { props.dispatch }/> }/>\r\n            <Route path=\"/profile\" render = { () => <Profile postData = { props.postData } newPostText ={ props.newPostText } dispatch = { props.dispatch } /> }/>\r\n            <Route path=\"/news\" component = {News}/>\r\n            <Route path=\"/music\" component = {Music}/>\r\n            <Route path=\"/settings\" component = {Settings}/>\r\n            {/* <Route path=\"/friends\" render = { () => <Friends dialogsData = {props.dialogsData} /> }/> */}\r\n        </div>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import * as serviceWorker from './serviceWorker';\r\nimport store from './components/data/state'\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Header from './Header.jsx';\r\nimport Footer from './Footer.jsx';\r\nimport Main from'./Main.jsx';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n//import { addPost, addMessage, updateNewPost, updateNewMessage, subscribe } from './components/data/state';\r\n\r\n\r\nlet renderTree = (state) => {\r\n    debugger\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <BrowserRouter>\r\n        <Header />\r\n       \r\n        <Main \r\n            state = { state }\r\n            postData ={ state.profilePage.postData } \r\n            newPostText ={ state.profilePage.newPostText }\r\n            // updateNewPost = { store.updateNewPost.bind(store) }\r\n            dispatch = { store.dispatch.bind(store) }\r\n\r\n            messagesData = { state.dialogsPage.messagesData } \r\n            dialogsData = { state.dialogsPage.dialogsData }\r\n            newMessageText = { state.dialogsPage.newMessageText } \r\n            // updateNewMessage = { store.updateNewMessage.bind(store) }\r\n            // addMessage = { store.addMessage.bind(store) }\r\n\r\n            linkData = {state.linkData} />\r\n\r\n        <Footer/>\r\n      </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n}\r\n\r\nrenderTree(store.getState());\r\n\r\nstore.subscribe(renderTree);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}